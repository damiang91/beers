{"version":3,"sources":["components/Home.js","components/About.js","components/List.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","React","Component","About","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","_this2","fetch","then","response","json","tempArray","forEach","element","tempObj","name","image","src","image_url","style","height","alt","onClick","tagline","push","setState","_this3","dist_default","title","columns","field","editable","onRowAdd","newData","Promise","resolve","setTimeout","toConsumableArray","objectSpread","onRowUpdate","oldData","indexOf","onRowDelete","splice","Beers","beers","e","target","classList","toggle","Header","accessor","Cell","row","value","id","filterable","filterAll","filterMethod","filter","rows","matchSorter","keys","d","className","es","defaultPageSize","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","App","_React$useState","useState","_React$useState2","slicedToArray","anchorEl","setAnchorEl","handleClose","classes","react_router_dom","AppBar","position","Toolbar","variant","Button","aria-owns","undefined","aria-haspopup","event","currentTarget","Menu_default","Menu","open","Boolean","onClose","MenuItem","to","react_router","exact","path","component","List","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43896dca.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>Home</div>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\n\r\nclass About extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        fetch(\"https://api.punkapi.com/v2/beers?page=1&per_page=80\")\r\n        .then(response => response.json() )\r\n        .then(data => {\r\n            let tempArray= [];\r\n             data.forEach( element =>{\r\n                 let tempObj = {};\r\n                 tempObj.name = element.name;\r\n                 tempObj.image = <img src={element.image_url} style={{height: '100px'}} alt={element.image_url} onClick={this.onClick}></img>;\r\n                 tempObj.tagline = element.tagline;\r\n                 tempArray.push(tempObj);\r\n\r\n            })\r\n            this.setState({data: tempArray})\r\n            \r\n        \r\n        });\r\n        \r\n}\r\n    render() {\r\n        const columns = [\r\n              { title: 'Image', field: 'image' },\r\n              { title: 'Name', field: 'name' },\r\n              { title: 'Tagline', field: 'tagline' },\r\n                ]\r\n\r\n        return (\r\n            <div>\r\n                <MaterialTable\r\n            title=\"Editable Example\"\r\n            columns={columns}\r\n            data={this.state.data}\r\n            editable={{\r\n              onRowAdd: newData =>\r\n                new Promise(resolve => {\r\n                  setTimeout(() => {\r\n                    resolve();\r\n                    const data = [...this.state.data];\r\n                    data.push(newData);\r\n                    this.setState({ ...this.state, data });\r\n                  }, 600);\r\n                }),\r\n              onRowUpdate: (newData, oldData) =>\r\n                new Promise(resolve => {\r\n                  setTimeout(() => {\r\n                    resolve();\r\n                    const data = [...this.state.data];\r\n                    data[data.indexOf(oldData)] = newData;\r\n                    this.setState({ ...this.state, data });\r\n                  }, 600);\r\n                }),\r\n              onRowDelete: oldData =>\r\n                new Promise(resolve => {\r\n                  setTimeout(() => {\r\n                    resolve();\r\n                    const data = [...this.state.data];\r\n                    data.splice(data.indexOf(oldData), 1);\r\n                    this.setState({ ...this.state, data });\r\n                  }, 600);\r\n                }),\r\n            }}\r\n          />\r\n          </div>\r\n        )\r\n    }\r\n}\r\nexport default About;","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport matchSorter from 'match-sorter';\r\nimport 'react-table/react-table.css';\r\n// import './Beers.css';\r\n\r\nclass Beers extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            beers: [],\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        fetch(\"https://api.punkapi.com/v2/beers?page=1&per_page=80\")\r\n        .then(response => response.json() )\r\n        .then(data => this.setState({beers: data}));\r\n        \r\n}\r\n    onClick(e) {\r\n        if(e.target.classList.toggle('red'));\r\n    }\r\n\r\n    render() {\r\n        const columns = [{\r\n            Header: 'Image',\r\n            accessor:'image_url',\r\n            Cell: row => <img src={row.value} style={{height: '100px'}} alt={row.value} onClick={this.onClick}></img>\r\n        },{\r\n            Header: 'Name',\r\n            id: 'name',\r\n            filterable: true,\r\n            filterAll: true,\r\n            filterMethod: (filter,rows) => matchSorter(rows,filter.value, {keys: ['name']}),\r\n            accessor: d => d.name,\r\n        },{\r\n            Header: 'Tagline',\r\n            accessor: 'tagline'\r\n        }]\r\n        \r\n\r\n        return (\r\n            <div className=\"beers\">\r\n                <ReactTable data={this.state.beers} columns={columns} defaultPageSize={10} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default Beers;\r\n","import React from 'react';\nimport  {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport List from './components/List';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/Menu';\n// import IconButton from '@material-ui/core/IconButton';\nimport './App.css';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\n\nfunction App() {\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n  const classes = useStyles();\n  return (\n    \n      <Router>  \n\n      <div className={classes.root + \" App\"}>\n        <AppBar position=\"sticky\">\n          <Toolbar variant=\"dense\">\n            <Button aria-owns={anchorEl ? 'simple-menu' : undefined} aria-haspopup=\"true\" onClick={handleClick}>          \n                <MenuIcon />             \n            </Button>\n            <Menu id=\"simple-menu\" anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleClose}>\n              <MenuItem onClick={handleClose}><Link to={'/'}>Home</Link></MenuItem>\n              <MenuItem onClick={handleClose}><Link to={'/list'}>List of our Beers</Link></MenuItem>\n              <MenuItem onClick={handleClose}><Link to={'/about'}>About us</Link></MenuItem>\n            </Menu>\n          </Toolbar>\n        </AppBar>  \n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/about' component={About} />\n          <Route path='/list' component={List} />\n        </Switch>\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}